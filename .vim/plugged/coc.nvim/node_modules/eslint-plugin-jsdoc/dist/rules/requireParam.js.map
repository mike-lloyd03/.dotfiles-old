{"version":3,"sources":["../../src/rules/requireParam.js"],"names":["rootNamer","desiredRoots","currentIndex","name","idx","incremented","length","base","suffix","shift","jsdoc","node","utils","context","functionParameterNames","getFunctionParameterNames","preferredTagName","getPreferredTagName","tagName","jsdocParameterNames","getJsdocTagsDeep","shallowJsdocParameterNames","filter","tag","includes","map","avoidDocs","hasTag","options","enableFixer","enableRootFixer","checkRestProperty","enableRestElementFixer","checkTypesPattern","lastSlashPos","lastIndexOf","checkTypesRegex","RegExp","slice","missingTags","flattenedRoots","flattenRoots","names","paramIndex","reduce","acc","cur","findExpectedIndex","jsdocTags","indexAtFunctionParams","remainingRoots","foundIndex","findIndex","newAdd","some","remainingRoot","Array","isArray","paramTags","autoIncrementBase","unnamedRootBase","nextRootName","namer","forEach","functionParameterName","functionParameterIdx","inc","matchedJsdoc","rootName","type","search","hasRestElement","hasPropertyRest","rests","paramName","find","fpn","emptyParamIdx","push","remove","fullParamName","undefined","funcParamName","restElement","fix","tags","splice","expectedIdx","fixer","missingTag","reportJSDoc","contextDefaults","meta","fixable","schema","additionalProperties","properties","default","checkConstructors","checkGetters","checkSetters","contexts","items","exemptedBy"],"mappings":"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","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\ntype T = [string, () => T];\nconst rootNamer = (desiredRoots: string[], currentIndex: number): T => {\n  let name;\n  let idx = currentIndex;\n  const incremented = desiredRoots.length <= 1;\n  if (incremented) {\n    const base = desiredRoots[0];\n    const suffix = idx++;\n    name = `${base}${suffix}`;\n  } else {\n    name = desiredRoots.shift();\n  }\n\n  return [name, incremented, () => {\n    return rootNamer(desiredRoots, idx);\n  }];\n};\n\nexport default iterateJsdoc(({\n  jsdoc,\n  node,\n  utils,\n  context,\n}) => {\n  const functionParameterNames = utils.getFunctionParameterNames();\n  const preferredTagName = utils.getPreferredTagName({tagName: 'param'});\n  if (!preferredTagName) {\n    return;\n  }\n  const jsdocParameterNames = utils.getJsdocTagsDeep(preferredTagName);\n\n  const shallowJsdocParameterNames = jsdocParameterNames.filter((tag) => {\n    return !tag.name.includes('.');\n  }).map((tag, idx) => {\n    return {...tag,\n      idx};\n  });\n\n  if (utils.avoidDocs()) {\n    return;\n  }\n\n  // Param type is specified by type in @type\n  if (utils.hasTag('type')) {\n    return;\n  }\n\n  const {\n    enableFixer = true,\n    enableRootFixer = true,\n    checkRestProperty = false,\n    enableRestElementFixer = true,\n    checkTypesPattern = '/^(?:[oO]bject|[aA]rray|PlainObject|Generic(?:Object|Array))$/',\n  } = context.options[0] || {};\n\n  const lastSlashPos = checkTypesPattern.lastIndexOf('/');\n  const checkTypesRegex = lastSlashPos === -1 ?\n    new RegExp(checkTypesPattern) :\n    new RegExp(checkTypesPattern.slice(1, lastSlashPos), checkTypesPattern.slice(lastSlashPos + 1));\n\n  const missingTags = [];\n  const flattenedRoots = utils.flattenRoots(functionParameterNames).names;\n  const paramIndex = flattenedRoots.reduce((acc, cur, idx) => {\n    acc[cur] = idx;\n\n    return acc;\n  }, {});\n\n  const findExpectedIndex = (jsdocTags, indexAtFunctionParams) => {\n    const remainingRoots = functionParameterNames.slice(indexAtFunctionParams || 0);\n    const foundIndex = jsdocTags.findIndex(({name, newAdd}) => {\n      return !newAdd && remainingRoots.some((remainingRoot) => {\n        if (Array.isArray(remainingRoot)) {\n          return remainingRoot[1].names.includes(name);\n        }\n        if (typeof remainingRoot === 'object') {\n          return name === remainingRoot.name;\n        }\n\n        return name === remainingRoot;\n      });\n    });\n\n    if (foundIndex > -1) {\n      return foundIndex;\n    }\n\n    const paramTags = jsdocTags.filter(({tag}) => {\n      return tag === preferredTagName;\n    });\n\n    return paramTags.length;\n  };\n\n  const {\n    autoIncrementBase = 0,\n    unnamedRootBase = ['root'],\n  } = context.options[0] || {};\n  let [nextRootName, incremented, namer] = rootNamer([...unnamedRootBase], autoIncrementBase);\n\n  functionParameterNames.forEach((functionParameterName, functionParameterIdx) => {\n    let inc;\n    if (Array.isArray(functionParameterName)) {\n      const matchedJsdoc = shallowJsdocParameterNames[functionParameterIdx] ||\n        jsdocParameterNames[functionParameterIdx];\n\n      let rootName;\n      if (functionParameterName[0]) {\n        rootName = functionParameterName[0];\n      } else if (matchedJsdoc && matchedJsdoc.name) {\n        rootName = matchedJsdoc.name;\n        if (matchedJsdoc.type && matchedJsdoc.type.search(checkTypesRegex) === -1) {\n          return;\n        }\n      } else {\n        rootName = nextRootName;\n        inc = incremented;\n        [nextRootName, incremented, namer] = namer();\n      }\n\n      const {hasRestElement, hasPropertyRest, rests, names} = functionParameterName[1];\n      if (!enableRestElementFixer && hasRestElement) {\n        return;\n      }\n\n      names.forEach((paramName, idx) => {\n        if (jsdocParameterNames && !jsdocParameterNames.find(({name}) => {\n          return name === rootName;\n        })) {\n          if (!missingTags.find(({functionParameterName: fpn}) => {\n            return fpn === rootName;\n          })) {\n            const emptyParamIdx = jsdocParameterNames.findIndex(({name}) => {\n              return !name;\n            });\n\n            if (emptyParamIdx > -1) {\n              missingTags.push({\n                functionParameterIdx: emptyParamIdx,\n                functionParameterName: rootName,\n                inc,\n                remove: true,\n              });\n            } else {\n              missingTags.push({\n                functionParameterIdx: paramIndex[rootName],\n                functionParameterName: rootName,\n                inc,\n              });\n            }\n          }\n        }\n        if (!checkRestProperty && rests[idx]) {\n          return;\n        }\n\n        const fullParamName = `${rootName}.${paramName}`;\n\n        if (jsdocParameterNames && !jsdocParameterNames.find(({name}) => {\n          return name === fullParamName;\n        })) {\n          missingTags.push({\n            functionParameterIdx: paramIndex[functionParameterName[0] ? fullParamName : paramName],\n            functionParameterName: fullParamName,\n            inc,\n            type: hasRestElement && !hasPropertyRest ? '...any' : undefined,\n          });\n        }\n      });\n\n      return;\n    }\n    let funcParamName;\n    let type;\n    if (typeof functionParameterName === 'object') {\n      if (!enableRestElementFixer && functionParameterName.restElement) {\n        return;\n      }\n      funcParamName = functionParameterName.name;\n      type = '...any';\n    } else {\n      funcParamName = functionParameterName;\n    }\n\n    if (jsdocParameterNames && !jsdocParameterNames.find(({name}) => {\n      return name === funcParamName;\n    })) {\n      missingTags.push({\n        functionParameterIdx: paramIndex[funcParamName],\n        functionParameterName: funcParamName,\n        inc,\n        type,\n      });\n    }\n  });\n\n  const fix = ({\n    functionParameterIdx, functionParameterName, remove, inc, type,\n  }, tags) => {\n    if (inc && !enableRootFixer) {\n      return;\n    }\n    if (remove) {\n      tags.splice(functionParameterIdx, 1, {\n        name: functionParameterName,\n        newAdd: true,\n        tag: preferredTagName,\n        type,\n      });\n    } else {\n      const expectedIdx = findExpectedIndex(tags, functionParameterIdx);\n      tags.splice(expectedIdx, 0, {\n        name: functionParameterName,\n        newAdd: true,\n        tag: preferredTagName,\n        type,\n      });\n    }\n  };\n\n  const fixer = () => {\n    if (!jsdoc.tags) {\n      jsdoc.tags = [];\n    }\n\n    missingTags.forEach((missingTag) => {\n      fix(missingTag, jsdoc.tags);\n    });\n  };\n\n  missingTags.forEach(({functionParameterName}) => {\n    utils.reportJSDoc(`Missing JSDoc @${preferredTagName} \"${functionParameterName}\" declaration.`, null, enableFixer ? fixer : null, node);\n  });\n}, {\n  contextDefaults: true,\n  meta: {\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          autoIncrementBase: {\n            default: 0,\n            type: 'integer',\n          },\n          checkConstructors: {\n            default: true,\n            type: 'boolean',\n          },\n          checkGetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkRestProperty: {\n            default: false,\n            type: 'boolean',\n          },\n          checkSetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkTypesPattern: {\n            type: 'string',\n          },\n          contexts: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          enableFixer: {\n            type: 'boolean',\n          },\n          enableRestElementFixer: {\n            type: 'boolean',\n          },\n          enableRootFixer: {\n            type: 'boolean',\n          },\n          exemptedBy: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          unnamedRootBase: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"requireParam.js"}