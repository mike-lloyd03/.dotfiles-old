{"version":3,"sources":["../src/jsdocUtils.js"],"names":["flattenRoots","params","root","hasRestElement","hasPropertyRest","rests","names","reduce","acc","cur","Array","isArray","nms","flattened","inner","filter","Boolean","push","concat","isRestProperty","restElement","name","getPropertiesFromPropertySignature","propSignature","typeAnnotation","type","key","members","map","member","undefined","getFunctionParameterNames","functionNode","getParamName","param","isProperty","_","has","left","propertyNames","get","properties","roots","prop","value","elements","idx","argument","parameter","Error","getJsdocTagsDeep","jsdoc","targetTagName","tags","arr","tag","modeWarnSettings","getTagNamesForMode","mode","context","jsdocTags","typeScriptTags","closureTags","hasBeenWarned","report","loc","start","column","line","message","markSettingAsWarned","getPreferredTagName","tagPreference","prefValues","values","includes","some","prefVal","replacement","tagNames","preferredTagName","findKey","aliases","isValidTag","definedTags","validTagNames","keys","flatten","additionalTags","allTags","hasTag","targetTagLower","toLowerCase","doc","hasATag","targetTagNames","hasDefinedTypeReturnTag","tagType","trim","tagsWithMandatoryTypePosition","tagsWithMandatoryTypePositionClosure","tagsWithOptionalTypePosition","tagsWithOptionalTypePositionClosure","namepathDefiningTags","tagsWithOptionalNamePosition","tagsWithMandatoryNamePosition","tagsWithMandatoryTypeOrNamePosition","isNamepathDefiningTag","tagName","tagMightHaveTypePosition","tagMustHaveTypePosition","tagMightHaveNamePosition","tagMustHaveNamePosition","tagMightHaveEitherTypeOrNamePosition","tagMustHaveEitherTypeOrNamePosition","hasReturnValue","node","expression","body","bodyNode","consequent","alternate","block","handler","finalizer","cases","someCase","parseClosureTemplateTag","description","split","enforcedContexts","defaultContexts","options","contexts","getContextObject","checkJsdoc","obj","filterTags","tagsWithNamesAndDescriptions","getTagsByType","descName","tagsWithoutNames","tagsWithNames","tagWithName","getIndent","sourceCode","indent","text","match","charAt"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport {jsdocTags, closureTags, typeScriptTags} from './tagNames';\nimport WarnSettings from './WarnSettings';\n\ntype ParserMode = \"jsdoc\"|\"typescript\"|\"closure\";\n\n// Given a nested array of property names, reduce them to a single array,\n// appending the name of the root element along the way if present.\nconst flattenRoots = (params, root = '') => {\n  let hasRestElement = false;\n  let hasPropertyRest = false;\n  const rests = [];\n  const names = params.reduce((acc, cur) => {\n    if (Array.isArray(cur)) {\n      let nms;\n      if (Array.isArray(cur[1])) {\n        nms = cur[1];\n      } else {\n        if (cur[1].hasRestElement) {\n          hasRestElement = true;\n        }\n        if (cur[1].hasPropertyRest) {\n          hasPropertyRest = true;\n        }\n        nms = cur[1].names;\n      }\n\n      const flattened = flattenRoots(nms, root ? `${root}.${cur[0]}` : cur[0]);\n      if (flattened.hasRestElement) {\n        hasRestElement = true;\n      }\n      if (flattened.hasPropertyRest) {\n        hasPropertyRest = true;\n      }\n      const inner = [\n        root ? `${root}.${cur[0]}` : cur[0],\n        ...flattened.names,\n      ].filter(Boolean);\n      rests.push(false, ...flattened.rests);\n\n      return acc.concat(inner);\n    }\n    if (typeof cur === 'object') {\n      if (cur.isRestProperty) {\n        hasPropertyRest = true;\n        rests.push(true);\n      } else {\n        rests.push(false);\n      }\n      if (cur.restElement) {\n        hasRestElement = true;\n      }\n      acc.push(root ? `${root}.${cur.name}` : cur.name);\n    } else if (typeof cur !== 'undefined') {\n      rests.push(false);\n      acc.push(root ? `${root}.${cur}` : cur);\n    }\n\n    return acc;\n  }, []);\n\n  return {\n    hasPropertyRest,\n    hasRestElement,\n    names,\n    rests,\n  };\n};\n\ntype T = string | [?string, T];\nconst getPropertiesFromPropertySignature = (propSignature): T => {\n  if (propSignature.typeAnnotation && propSignature.typeAnnotation.typeAnnotation.type === 'TSTypeLiteral') {\n    return [propSignature.key.name, propSignature.typeAnnotation.typeAnnotation.members.map((member) => {\n      return getPropertiesFromPropertySignature(member);\n    })];\n  }\n  if (propSignature.type === 'TSIndexSignature') {\n    return undefined;\n  }\n\n  return propSignature.key.name;\n};\n\nconst getFunctionParameterNames = (functionNode : Object) : Array<T> => {\n  // eslint-disable-next-line complexity\n  const getParamName = (param, isProperty) => {\n    if (_.has(param, 'typeAnnotation') || _.has(param, 'left.typeAnnotation')) {\n      const typeAnnotation = _.has(param, 'left.typeAnnotation') ? param.left.typeAnnotation : param.typeAnnotation;\n      if (typeAnnotation.typeAnnotation.type === 'TSTypeLiteral') {\n        const propertyNames = typeAnnotation.typeAnnotation.members.map((member) => {\n          return getPropertiesFromPropertySignature(member);\n        });\n        const flattened = flattenRoots(propertyNames);\n        if (_.has(param, 'name') || _.has(param, 'left.name')) {\n          return [_.has(param, 'left.name') ? param.left.name : param.name, flattened];\n        }\n\n        return [undefined, flattened];\n      }\n    }\n\n    if (_.has(param, 'name')) {\n      return param.name;\n    }\n\n    if (_.has(param, 'left.name')) {\n      return param.left.name;\n    }\n\n    if (param.type === 'ObjectPattern' || _.get(param, 'left.type') === 'ObjectPattern') {\n      const properties = param.properties || _.get(param, 'left.properties');\n      const roots = properties.map((prop) => {\n        return getParamName(prop, true);\n      });\n\n      return [undefined, flattenRoots(roots)];\n    }\n\n    if (param.type === 'Property') {\n      if (param.value.type === 'ObjectPattern') {\n        return [param.key.name, param.value.properties.map((prop) => {\n          return getParamName(prop, isProperty);\n        })];\n      }\n\n      // As function parameters, these do not allow dynamic properties, etc.\n      /* istanbul ignore else */\n      if (param.key.type === 'Identifier') {\n        return param.key.name;\n      }\n    }\n\n    if (param.type === 'ArrayPattern' || _.get(param, 'left.type') === 'ArrayPattern') {\n      const elements = param.elements || _.get(param, 'left.elements');\n      const roots = elements.map((prop, idx) => {\n        return {\n          name: idx,\n          restElement: prop.type === 'RestElement',\n        };\n      });\n\n      return [undefined, flattenRoots(roots)];\n    }\n\n    if (param.type === 'RestElement') {\n      return {\n        isRestProperty: isProperty,\n        name: param.argument.name,\n        restElement: true,\n      };\n    }\n\n    if (param.type === 'TSParameterProperty') {\n      return getParamName(param.parameter, true);\n    }\n\n    throw new Error('Unsupported function signature format.');\n  };\n\n  return functionNode.params.map((param) => {\n    return getParamName(param);\n  });\n};\n\n/**\n * Gets all names of the target type, including those that refer to a path, e.g.\n * \"@param foo; @param foo.bar\".\n */\nconst getJsdocTagsDeep = (jsdoc : Object, targetTagName : string) : Array<Object> => {\n  return (jsdoc.tags || []).reduce((arr, {name, tag, type}, idx) => {\n    if (tag !== targetTagName) {\n      return arr;\n    }\n    arr.push({\n      idx,\n      name,\n      type,\n    });\n\n    return arr;\n  }, []);\n};\n\nconst modeWarnSettings = WarnSettings();\n\nconst getTagNamesForMode = (mode, context) => {\n  switch (mode) {\n  case 'jsdoc':\n    return jsdocTags;\n  case 'typescript':\n    return typeScriptTags;\n  case 'closure':\n    return closureTags;\n  default:\n    if (!modeWarnSettings.hasBeenWarned(context, 'mode')) {\n      context.report({\n        loc: {\n          start: {\n            column: 1,\n            line: 1,\n          },\n        },\n        message: `Unrecognized value \\`${mode}\\` for \\`settings.jsdoc.mode\\`.`,\n      });\n      modeWarnSettings.markSettingAsWarned(context, 'mode');\n    }\n\n    // We'll avoid breaking too many other rules\n    return jsdocTags;\n  }\n};\n\nconst getPreferredTagName = (\n  context,\n  mode : ParserMode,\n  name : string,\n  tagPreference : Object = {},\n) : string|Object => {\n  const prefValues = _.values(tagPreference);\n  if (prefValues.includes(name) || prefValues.some((prefVal) => {\n    return prefVal && typeof prefVal === 'object' && prefVal.replacement === name;\n  })) {\n    return name;\n  }\n\n  if (_.has(tagPreference, name)) {\n    return tagPreference[name];\n  }\n\n  const tagNames = getTagNamesForMode(mode, context);\n\n  const preferredTagName = _.findKey(tagNames, (aliases) => {\n    return aliases.includes(name);\n  });\n  if (preferredTagName) {\n    return preferredTagName;\n  }\n\n  return name;\n};\n\nconst isValidTag = (\n  context,\n  mode : ParserMode,\n  name : string,\n  definedTags : Array,\n) : boolean => {\n  const tagNames = getTagNamesForMode(mode, context);\n  const validTagNames = _.keys(tagNames).concat(_.flatten(_.values(tagNames)));\n  const additionalTags = definedTags;\n  const allTags = validTagNames.concat(additionalTags);\n\n  return allTags.includes(name);\n};\n\nconst hasTag = (jsdoc : Object, targetTagName : string) : boolean => {\n  const targetTagLower = targetTagName.toLowerCase();\n\n  return _.some(jsdoc.tags, (doc : Object) => {\n    return doc.tag.toLowerCase() === targetTagLower;\n  });\n};\n\nconst hasATag = (jsdoc : Object, targetTagNames : Array) : boolean => {\n  return targetTagNames.some((targetTagName) => {\n    return hasTag(jsdoc, targetTagName);\n  });\n};\n\n/**\n * Checks if the JSDoc comment declares a return value.\n *\n * @param {JsDocTag} tag\n *   the tag which should be checked.\n * @returns {boolean}\n *   true in case a return value is declared; otherwise false.\n */\nconst hasDefinedTypeReturnTag = (tag) => {\n  // The function should not continue in the event @returns is not defined...\n  if (typeof tag === 'undefined' || tag === null) {\n    return false;\n  }\n\n  // .. same applies if it declares `@returns {undefined}` or `@returns {void}`\n  const tagType = tag.type.trim();\n  if (tagType === 'undefined' || tagType === 'void') {\n    return false;\n  }\n\n  // In any other case, something must be returned, and\n  // a return statement is expected\n  return true;\n};\n\nconst tagsWithMandatoryTypePosition = [\n  // These both show curly brackets in the doc signature and examples\n  // \"typeExpression\"\n  'implements',\n\n  // \"typeName\"\n  'type',\n];\n\nconst tagsWithMandatoryTypePositionClosure = [\n  ...tagsWithMandatoryTypePosition,\n  'this',\n  'define',\n];\n\n// All of these have a signature with \"type\" except for\n//  `augments`/`extends` (\"namepath\")\n//  `param`/`arg`/`argument` (no signature)\n//  `property`/`prop` (no signature)\n// `modifies` (undocumented)\nconst tagsWithOptionalTypePosition = [\n  // These have the example showing curly brackets but not in their doc signature, e.g.: https://jsdoc.app/tags-enum.html\n  'enum',\n  'member', 'var',\n\n  'typedef',\n\n  // These do not show curly brackets in either the signature or examples\n  'augments', 'extends',\n\n  'class', 'constructor',\n  'constant', 'const',\n\n  // These show the signature with curly brackets but not in the example\n  'module',\n  'namespace',\n\n  // These have no formal signature in the docs but show curly brackets\n  //   in the examples\n  'param', 'arg', 'argument',\n  'property', 'prop',\n\n  // These show curly brackets in the signature and in the examples\n  'returns', 'return',\n  'throws', 'exception',\n  'yields', 'yield',\n\n  // Has no documentation, but test example has curly brackets, and\n  //  \"name\" would be suggested rather than \"namepath\" based on example; not\n  //  sure if name is required\n  'modifies',\n];\n\nconst tagsWithOptionalTypePositionClosure = [\n  ...tagsWithOptionalTypePosition,\n\n  'export',\n\n  // Shows the signature with curly brackets but not in the example\n  // \"typeExpression\"\n  'package',\n  'private',\n  'protected',\n\n  // These do not show a signature nor show curly brackets in the example\n  'public',\n  'static',\n];\n\n// None of these show as having curly brackets for their name/namepath\nconst namepathDefiningTags = [\n  // These appear to require a \"name\" in their signature, albeit these\n  //  are somewhat different from other \"name\"'s (including as described\n  // at https://jsdoc.app/about-namepaths.html )\n  'external', 'host',\n  'event',\n\n  // These allow for \"name\"'s in their signature, but indicate as optional\n  'class', 'constructor',\n  'constant', 'const',\n  'function', 'func', 'method',\n  'interface',\n  'member', 'var',\n  'mixin',\n  'namespace',\n\n  // Todo: Should add `module` here (with optional \"name\" and no curly brackets);\n  //  this block impacts `no-undefined-types` and `valid-types` (search for\n  //  \"isNamepathDefiningTag|tagMightHaveNamePosition|tagMightHaveEitherTypeOrNamePosition\")\n\n  // These seem to all require a \"namepath\" in their signatures (with no counter-examples)\n  'name',\n  'typedef',\n  'callback',\n];\n\n// The following do not seem to allow curly brackets in their doc\n//  signature or examples (besides `modifies`)\nconst tagsWithOptionalNamePosition = [\n  ...namepathDefiningTags,\n\n  // `borrows` has a different format, however, so needs special parsing;\n  //   seems to require both, and as \"namepath\"'s\n  'borrows',\n\n  // Signature seems to require a \"name\" (of an event) and no counter-examples\n  'emits', 'fires',\n  'listens',\n\n  // Signature seems to require a \"namepath\" (and no counter-examples)\n  'alias',\n  'augments', 'extends',\n  'lends',\n  'this',\n\n  // Signature seems to require a \"namepath\" (and no counter-examples),\n  //  though it allows an incomplete namepath ending with connecting symbol\n  'memberof', 'memberof!',\n\n  // Signature seems to require a \"OtherObjectPath\" with no counter-examples\n  'mixes',\n\n  // Signature allows for \"namepath\" or text\n  'see',\n];\n\n// Todo: `@link` seems to require a namepath OR URL and might be checked as such.\n\n// The doc signature of `event` seems to require a \"name\"\nconst tagsWithMandatoryNamePosition = [\n  // \"name\" (and a special syntax for the `external` name)\n  'external', 'host',\n\n  // \"namepath\"\n  'callback',\n  'name',\n  'typedef',\n];\n\nconst tagsWithMandatoryTypeOrNamePosition = [\n  // \"namepath\"\n  'alias',\n  'augments', 'extends',\n  'borrows',\n  'lends',\n  'memberof', 'memberof!',\n  'name',\n  'this',\n  'typedef',\n\n  // \"name\"\n  'external', 'host',\n\n  // \"OtherObjectPath\"\n  'mixes',\n];\n\nconst isNamepathDefiningTag = (tagName) => {\n  return namepathDefiningTags.includes(tagName);\n};\n\nconst tagMightHaveTypePosition = (mode, tag) => {\n  if (mode === 'closure') {\n    return tagsWithMandatoryTypePositionClosure.includes(tag) ||\n      tagsWithOptionalTypePositionClosure.includes(tag);\n  }\n\n  return tagsWithMandatoryTypePosition.includes(tag) ||\n    tagsWithOptionalTypePosition.includes(tag);\n};\n\nconst tagMustHaveTypePosition = (mode, tag) => {\n  if (mode === 'closure') {\n    return tagsWithMandatoryTypePositionClosure.includes(tag);\n  }\n\n  return tagsWithMandatoryTypePosition.includes(tag);\n};\n\nconst tagMightHaveNamePosition = (tag) => {\n  return tagsWithOptionalNamePosition.includes(tag);\n};\n\nconst tagMustHaveNamePosition = (tag) => {\n  return tagsWithMandatoryNamePosition.includes(tag);\n};\n\nconst tagMightHaveEitherTypeOrNamePosition = (mode, tag) => {\n  return tagMightHaveTypePosition(mode, tag) || tagMightHaveNamePosition(tag);\n};\n\nconst tagMustHaveEitherTypeOrNamePosition = (tag) => {\n  return tagsWithMandatoryTypeOrNamePosition.includes(tag);\n};\n\n/**\n * Checks if a node has a return statement. Void return does not count.\n *\n * @param {object} node\n * @returns {boolean}\n */\n// eslint-disable-next-line complexity\nconst hasReturnValue = (node) => {\n  if (!node) {\n    return false;\n  }\n  switch (node.type) {\n  case 'FunctionExpression':\n  case 'FunctionDeclaration':\n  case 'ArrowFunctionExpression': {\n    return node.expression || hasReturnValue(node.body);\n  }\n  case 'BlockStatement': {\n    return node.body.some((bodyNode) => {\n      return bodyNode.type !== 'FunctionDeclaration' && hasReturnValue(bodyNode);\n    });\n  }\n  case 'WhileStatement':\n  case 'DoWhileStatement':\n  case 'ForStatement':\n  case 'ForInStatement':\n  case 'ForOfStatement':\n  case 'WithStatement': {\n    return hasReturnValue(node.body);\n  }\n  case 'IfStatement': {\n    return hasReturnValue(node.consequent) || hasReturnValue(node.alternate);\n  }\n  case 'TryStatement': {\n    return hasReturnValue(node.block) ||\n      hasReturnValue(node.handler && node.handler.body) ||\n      hasReturnValue(node.finalizer);\n  }\n  case 'SwitchStatement': {\n    return node.cases.some(\n      (someCase) => {\n        return someCase.consequent.some(hasReturnValue);\n      },\n    );\n  }\n  case 'ReturnStatement': {\n    // void return does not count.\n    if (node.argument === null) {\n      return false;\n    }\n\n    return true;\n  }\n  default: {\n    return false;\n  }\n  }\n};\n\n/** @param {string} tag */\n/*\nconst isInlineTag = (tag) => {\n  return /^(@link|@linkcode|@linkplain|@tutorial) /u.test(tag);\n};\n*/\n\n/**\n * Parses GCC Generic/Template types\n *\n * @see {https://github.com/google/closure-compiler/wiki/Generic-Types}\n * @param {JsDocTag} tag\n * @returns {Array<string>}\n */\nconst parseClosureTemplateTag = (tag) => {\n  return (tag.name + ' ' + tag.description)\n    .split(',')\n    .map((type) => {\n      return type.trim();\n    });\n};\n\n/**\n * Checks user option for `contexts` array, defaulting to\n *   contexts designated by the rule. Returns an array of\n *   ESTree AST types, indicating allowable contexts.\n *\n * @param {*} context\n * @param {true|string[]} defaultContexts\n * @returns {string[]}\n */\nconst enforcedContexts = (context, defaultContexts) => {\n  const {\n    contexts = defaultContexts === true ? [\n      'ArrowFunctionExpression',\n      'FunctionDeclaration',\n      'FunctionExpression',\n    ] : defaultContexts,\n  } = context.options[0] || {};\n\n  return contexts;\n};\n\n/**\n * @param {string[]} contexts\n * @param {Function} checkJsdoc\n */\nconst getContextObject = (contexts, checkJsdoc) => {\n  return contexts.reduce((obj, prop) => {\n    obj[prop] = checkJsdoc;\n\n    return obj;\n  }, {});\n};\n\nconst filterTags = (tags = [], filter) => {\n  return tags.filter(filter);\n};\n\nconst tagsWithNamesAndDescriptions = [\n  'param', 'arg', 'argument', 'property', 'prop',\n\n  // These two are parsed by our custom parser as though having a `name`\n  'returns', 'return',\n];\n\nconst getTagsByType = (context, mode, tags, tagPreference) => {\n  const descName = getPreferredTagName(context, mode, 'description', tagPreference);\n  const tagsWithoutNames = [];\n  const tagsWithNames = filterTags(tags, (tag) => {\n    const {tag: tagName} = tag;\n    const tagWithName = tagsWithNamesAndDescriptions.includes(tagName);\n    if (!tagWithName && tagName !== descName) {\n      tagsWithoutNames.push(tag);\n    }\n\n    return tagWithName;\n  });\n\n  return {\n    tagsWithNames,\n    tagsWithoutNames,\n  };\n};\n\nconst getIndent = (sourceCode) => {\n  let indent = sourceCode.text.match(/^\\n*([ \\t]+)/u);\n  indent = indent ? indent[1] + indent[1].charAt() : ' ';\n\n  return indent;\n};\n\nexport default {\n  enforcedContexts,\n  filterTags,\n  flattenRoots,\n  getContextObject,\n  getFunctionParameterNames,\n  getIndent,\n  getJsdocTagsDeep,\n  getPreferredTagName,\n  getTagsByType,\n  hasATag,\n  hasDefinedTypeReturnTag,\n  hasReturnValue,\n  hasTag,\n  isNamepathDefiningTag,\n  isValidTag,\n  parseClosureTemplateTag,\n  tagMightHaveEitherTypeOrNamePosition,\n  tagMightHaveNamePosition,\n  tagMightHaveTypePosition,\n  tagMustHaveEitherTypeOrNamePosition,\n  tagMustHaveNamePosition,\n  tagMustHaveTypePosition,\n};\n"],"file":"jsdocUtils.js"}