function dx() {
  :xa
  service_name="$1"
  shift
  project_name="$(basename $(pwd))"
  args=("$@")

  if [ ! -f "docker-compose.yml" ]; then
    echo "not in a docker-compose project directory"
    return 1
  fi
  if [ "$service_name" = "" ]; then
    echo "must include a service name"
    return 1
  fi
  if [ "$args" = "" ]; then
    echo "must include a command to run"
    return 1
  fi

  eval "docker exec -it ${project_name}-${service_name}-1 $(printf "'%s' " "${args[@]}")"
}

function cdtemp() {
  tmp_dir="$(mktemp -d)"
  cd "$tmp_dir" || exit 1
}

function h() {
  cmd=$*
  if [ "$1" = "cargo" ]; then
    cargo help "${@:2}" | $PAGER
  elif [ "$1" = "go" ]; then
    go help "${@:2}" | $PAGER
  elif [ "$1" = "aws" ]; then
    "$@" help | $PAGER
  elif [ "$1" = "cargo" ]; then
    cargo help "${@:2}"
  elif man -w "$cmd" &>/dev/null; then
    man "$cmd"
  elif eval "$cmd --help" &>/dev/null; then
    eval "$cmd --help" | $PAGER
  else
    echo "no man page or --help option available for '$cmd'"
    return 1
  fi
}

compdef _cmdstring h

function vimrc() {
  nvim_dir="$HOME/.config/nvim/lua"
  edit_file="$1"
  if [ "$edit_file" = "" ]; then
    pushd $HOME/.config/nvim >/dev/null && vim "$HOME/.config/nvim/init.lua" && popd >/dev/null
  fi

  if find "$nvim_dir/" -name "*.lua" | grep -P "$nvim_dir/$edit_file.lua" >/dev/null; then
    pushd $HOME/.config/nvim >/dev/null && vim "$nvim_dir/$edit_file.lua" && popd >/dev/null
  else
    echo "$edit_file.lua not found in nvim config directory"
  fi
}

compdef '_values desc lsp mappings plugs statusline theme tree' vimrc
